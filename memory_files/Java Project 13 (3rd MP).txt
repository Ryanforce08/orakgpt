Java Project 13 - 3rd MP
2 points

Eclipse
1. Inside of the Java folder you created, create another folder called Java13
2. Open up the Eclipse Icon on your Desktop
3. Navigate to the Java13 directory you created and select that folder
4. Click the Restore Icon on the left (it looks like a small windows button)
3. Go to File -> New -> Java Project
4. Type in the name of the project - Java13 and click Finish
5. Right click on the project on the left (in this case Java13) and go to New -> Class
7. Type in Java13 as the filename
8. Check the box for public static void main(String[] args) in the middle of the window.
9. Click Ok.
10. Press Enter before the opening brace on the first line.
11. Press Enter before the other opening brace on the 2nd or 3rd line.
12. You are ready to start your program.

The purpose of this project is to approximate the number pi.

From Calculus 2, it is possible to arrive at the following mathematical result using power series:

Multiplying both sides by 4 allows for the following:

This converges very slowly, but after enough iterations it will work.

Part 1:
Your goal is to approximate this number by using 10000 iterations.

In order to do this, you will need to notice a few things about the above sum.

First, notice that all the numerators are 1.
Second, notice that all the denominators are increasing odd numbers.
Third, notice that the parity switches between each term (between positive and negative)

It’s probably best to do this in multiple steps.
Recall that 1 / 3 in Java is 0, as is 1 / 5, and 1 / 7, etc… 
To rectify this, make the numerator equal to 1.0.

You will need a loop to run 10000 iterations.
Hint 1: An odd number can be represented as 2i + 1, where i represents the iteration
Hint 2: To make a term negative, you will need to multiply the term by -1. However, you only do this to every other term (in other words if the term’s iteration is odd →  1, 3, 5, 7, …)

Remember that the value for pi after 10000 iterations will be: 3.1414926535900345


Part 2:
Create a Project called Java13a and file named Java13. Copy the contents of Java13

Java also allows for the use of constants:
Using the code: Math.PI will provide the value of pi to 14 decimal places.

Alter your program so that you figure out how many iterations are necessary to compute PI accurate to 5 decimal points.
In other words, calculate the sum until the difference between the two values is less than 0.00001.

You might want to use Math.abs(x - y) which will always make a number positive (absolute value).
This is not a difficult task to do actually, and only requires altering one line of code.

You should utilize a count variable that runs through your code. Display the count to the screen.
