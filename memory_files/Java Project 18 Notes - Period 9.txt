import java.util.ArrayList;

public class TestArrayList2 
{
	public static void main(String[] args) throws InterruptedException
	{
		ArrayList <Integer> al = new ArrayList <Integer> ();
		
		for (int i = 1; i <= 10; i++)
			al.add(i);
		
		// .add(element) - add element to ArrayList
		// it adds to first open position (usually at the end)
		
		// ArrayLists can be printed without the use of a loop
		
		System.out.println(al);
		
		// .add(index, element) - add element to ArrayList
		// at a desired position. All elements to the right will
		// get shifted by 1 (to the right)
		
		al.add(4, 100);
		
		System.out.println(al);
		
		// .remove(index) - removes element at given index
		
		al.remove(8);
		
		System.out.println(al);
		
		// .remove((Object) o) - removes first instance of 
		// o in the ArrayList
		
		al.remove((Integer) 3);
		
		System.out.println(al); 
		// notice how 3 was removed, but not 4
		
		// .set(index, element) - overwrite contents at index 
		// with new element
		
		al.set(6, 300);
		
		System.out.println(al);
		
		// .get(index) - retrieve element at desired position
		
		System.out.println(al.get(4));
		
		// .indexOf(el) - retrieves index of el in ArrayList
		// if element is not there, -1 is returned
		
		System.out.println(al.indexOf(300));
		
		// .isEmpty() - checks if ArrayList has elements
		
		System.out.println(al.isEmpty());
		
		// .size() - returns number of elements in ArrayList
		
		System.out.println(al.size());
		
		// .contains(el) - returns true or false if element is in
		// the ArrayList
		
		System.out.println(al.contains(500));
		
		// .clear() - removes all elements from ArrayList
		
		al.clear();
		System.out.println(al);
	}
}



