C++ Project 3
1 point

Goals:
1. Learn order of operations (precedence)
2. Learn math functions

To get started:
To create a new project, click Create a new project. Then click Empty Project. Click Next

For the Project name, type Prog3. Click the 3 dots (...) for the location. Select the Prog3 folder you created above. No other options need to be changed for now. Click Create.

If an advertising window appears, click the little X at the top left.

To add a file (a class), right click on Source files. Go to Add → New Item…
Type Prog3 for the file name. NO SPACES. Click Add.

There are two types of numbers - integer and floating point (decimal)

The order of operations applies to arithmetic:
() → highest order of precedence
*, /, % → next highest level (but from left to right)
+, -, + → lowest level (from left to right)

There are 5 endemic mathematical operators:
+ → addition
- → subtraction
* → multiplication
/ → division
% → modulus (remainder)

String concatenation is on the same precedence level as addition and subtraction.

If both operands (the numbers adjacent to the operator) are both integers, this means an integer will be returned, regardless of the fact that you might receive a decimal number back. The result is truncation, and numbers after the decimal point are removed.

For example, 5 / 2 will return 2 because we normally receive 2.5, but numbers after the decimal point are removed.

If at least one of the operators is a floating point number, a floating point number will be returned unless the decimal component is 0, then an integer will be returned.

For example 5.0 / 2 will return 2.5 and 4.0 / 2 will return 2.

The modulus operator will find the remainder between two numbers (almost always integers).

For example, 5 % 2 will return 1 since the remainder of 5 and 2 is 1. 4 % 2 will return 0 since the remainder between 4 and 2 is 0.

Exponents must be done with a function, however. To find exponents, you must use the: 
pow(a, b) function.

It works like this: pow(a, b) means ab.
For example, pow(2, 3) = 8.

A. You are required to use the 5 mathematical operators inside of cout statements and return both integer and decimal values for numbers. You only have to use integers for modulus. This means there should be 9 cout statements for this part. Display both operands, the operator, and the equal sign using << appropriately.

B. You are required to use the pow function. You are to receive both an integer and a decimal value back. Use “^” as the operator notation in the cout statement. You should have two of them.
